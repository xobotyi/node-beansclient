name: "CI/CD"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

env:
  HUSKY: 0

jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Enable corepack"
        run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"
      - name: "Install dependencies"
        run: yarn --immutable
      - name: "Lint"
        run: yarn lint -f @react-hookz/gha

  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Enable corepack"
        run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"
      - name: "Install dependencies"
        run: yarn --immutable
      - name: "Build"
        run: yarn build

  test:
    name: "Test"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Enable corepack"
        run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"
      - name: "Install dependencies"
        run: yarn --immutable
      - name: "Test"
        run: yarn test:coverage --testLocationInResults --reporters=default --reporters=@jamesacarr/jest-reporter-github-actions
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/lcov.info
          fail_ci_if_error: true

  dependabot-merge:
    name: "Dependabot automerge"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    needs: [ "test", "build", "lint" ]
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    steps:
      - uses: fastify/github-action-merge-dependabot@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          target: 'minor'

  semantic-release:
    name: "Release"
    runs-on: ubuntu-latest
    needs: [ "test", "build", "lint" ]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    outputs:
      new-release-published: ${{ steps.release.outputs.new-release-published }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Enable corepack"
        run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"
      - name: "Install dependencies"
        run: yarn --immutable
      - name: "Release"
        id: "release"
        uses: codfish/semantic-release-action@v3.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-gh-pages:
    name: "Deploy GH Pages"
    runs-on: ubuntu-latest
    needs: "semantic-release"
    if: needs.semantic-release.outputs.new-release-published == 'true' || github.event_name == 'workflow_dispatch'
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Enable corepack"
        run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"
      - name: "Install dependencies"
        run: yarn --immutable
      - name: "Build docs"
        run: yarn docs:build
      - name: "Deploy"
        run: |
          git config --local user.name xobotyi && git config --local user.email xog3@yandex.ru
          git checkout --orphan gh-pages
          git --work-tree docs add --all
          git --work-tree docs commit -m 'gh-pages'
          git push origin HEAD:gh-pages --force
